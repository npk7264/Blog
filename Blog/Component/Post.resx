<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_likeCount.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>